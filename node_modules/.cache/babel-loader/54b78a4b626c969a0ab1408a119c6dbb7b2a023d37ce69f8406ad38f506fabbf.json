{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mart\\xEDn Del \\xC1guila\\\\Desktop\\\\Sweden 2024\\\\Project-Final-React\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport './Expenses.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  // let filterInfoText = '2019, 2021 & 2022';\n\n  // if (filteredYear === '2019') {\n  //   filterInfoText = '2020, 2021 & 2022';\n  // } else if (filteredYear === '2021') {\n  //   filterInfoText = '2019, 2020 & 2022';\n  // } else {\n  //   filterInfoText = '2019, 2020 & 2021';\n  // }\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.dategetFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","dategetFullYear","toString","children","className","selected","onChangeFilter","fileName","_jsxFileName","lineNumber","columnNumber","map","title","amount","date","id","_c","$RefreshReg$"],"sources":["C:/Users/Martín Del Águila/Desktop/Sweden 2024/Project-Final-React/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport ExpenseItem from './ExpenseItem';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport './Expenses.css';\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2020');\n  \n  // let filterInfoText = '2019, 2021 & 2022';\n  \n  // if (filteredYear === '2019') {\n  //   filterInfoText = '2020, 2021 & 2022';\n  // } else if (filteredYear === '2021') {\n  //   filterInfoText = '2019, 2020 & 2022';\n  // } else {\n  //   filterInfoText = '2019, 2020 & 2021';\n  // }\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.dategetFullYear().toString() === filteredYear;\n  })\n\n  return (\n    <div>\n      <Card className='expenses'>\n        <ExpensesFilter \n          selected={filteredYear} \n          onChangeFilter={filterChangeHandler} \n        />\n        {props.items.map((expense) => (\n          <ExpenseItem \n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n          />\n        ))}\n        \n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;;EAExD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMW,mBAAmB,GAAIC,YAAY,IAAK;IAC5CF,eAAe,CAACE,YAAY,CAAC;EAC/B,CAAC;EAED,MAAMC,gBAAgB,GAAGN,KAAK,CAACO,KAAK,CAACC,MAAM,CAACC,OAAO,IAAI;IACrD,OAAOA,OAAO,CAACC,eAAe,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKT,YAAY;EAC9D,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACH,IAAI;MAACkB,SAAS,EAAC,UAAU;MAAAD,QAAA,gBACxBd,OAAA,CAACF,cAAc;QACbkB,QAAQ,EAAEZ,YAAa;QACvBa,cAAc,EAAEX;MAAoB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDnB,KAAK,CAACO,KAAK,CAACa,GAAG,CAAEX,OAAO,iBACvBX,OAAA,CAACJ,WAAW;QAEV2B,KAAK,EAAEZ,OAAO,CAACY,KAAM;QACrBC,MAAM,EAAEb,OAAO,CAACa,MAAO;QACvBC,IAAI,EAAEd,OAAO,CAACc;MAAK,GAHdd,OAAO,CAACe,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhB,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CAxCIF,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AA0Cd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}